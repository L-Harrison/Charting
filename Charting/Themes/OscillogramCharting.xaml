<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ets="clr-namespace:Charting.Extensions"
                    xmlns:local="clr-namespace:Charting">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Charting;component/Themes/ToggleButton.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <local:BoolToVisibleConverter x:Key="BoolToVisibleConverter" />
    <Color x:Key="ToolBar_BackgroundColor">#FFFFFF</Color>
    <Color x:Key="ToolBar_ForegroundColor">#000000</Color>
    <Color x:Key="ToggleBtnForegroundColor">#000000</Color>
    <SolidColorBrush x:Key="ToolBar_Background" Color="{DynamicResource ToolBar_BackgroundColor}" />
    <SolidColorBrush x:Key="ToolBar_Foreground" Color="{DynamicResource ToolBar_ForegroundColor}" />
    <SolidColorBrush x:Key="ToggleBtnForeground" Color="{DynamicResource ToggleBtnForegroundColor}" />

    <Color x:Key="TextColorx">#206864</Color>
    <SolidColorBrush x:Key="TextColorxx" Color="{DynamicResource TextColorx}" />
    <!--<SolidColorBrush x:Key="Colorxx" Color="#206864" />-->
    <Style TargetType="{x:Type local:OscillogramCharting}">
        <Setter Property="GradientShow" Value="True" />
        <Setter Property="RealGradientShow" Value="True" />
        <Setter Property="SpeedShow" Value="True" />
        <Setter Property="PressureShow" Value="True" />
        <Setter Property="GradientShow" Value="True" />
        <Setter Property="RealSpeedShow" Value="True" />
        <Setter Property="LastTimeIndex" Value="59" />
        <Setter Property="CurrentTimeIndex" Value="0" />
        <Setter Property="GradientNum" Value="1280" />
        <Setter Property="AutoRightAdjustEnable" Value="True" />
        <Setter Property="CanDraggable" Value="True" />
        <Setter Property="IntervalAdjustEnable" Value="False" />
        <Setter Property="SpeedNum" Value="1280" />
        <Setter Property="DragX" Value="0" />
        <Setter Property="DragY" Value="0" />
        <Setter Property="Theme" Value="Default" />
        <Setter Property="FontSize" Value="9.5" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="BorderBrush" Value="Red" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource ToolBar_Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:OscillogramCharting}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton Name="Part_Edit" Width="80" Margin="5,0,0,0"
                                              ets:ToggleButtonHelper.DefaultForeGround="{DynamicResource ToggleBtnForeground}"
                                              ets:ToggleButtonHelper.TextForeGround="#B060B0" ets:ToggleButtonHelper.ToggleBtnBorderBrush="#B060B0" ets:ToggleButtonHelper.ToggleBtnTxtForeground="#B060B0"
                                              Content="{Binding DragType, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}, UpdateSourceTrigger=PropertyChanged}"
                                              IsChecked="{TemplateBinding EnableEditDrag}"
                                              Visibility="{Binding CanDraggable, Converter={StaticResource BoolToVisibleConverter}, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}, UpdateSourceTrigger=PropertyChanged}" />
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DragType, StringFormat={}{0}, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}, UpdateSourceTrigger=PropertyChanged}" Value="Gradient">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DragType, StringFormat={}{0}, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}, UpdateSourceTrigger=PropertyChanged}" Value="Speed">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <RadioButton Name="Part_DragAutoAgjust" Margin="5,0,0,0" VerticalAlignment="Center"
                                                 Content="AutoRightAgjust"
                                                 Foreground="{DynamicResource ToggleBtnForeground}"
                                                 GroupName="DragEdit"
                                                 IsChecked="{Binding AutoRightAdjustEnable, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}, UpdateSourceTrigger=PropertyChanged}" />
                                    <RadioButton Name="Part_DragIntervalAgjust" Margin="5,0,0,0" VerticalAlignment="Center"
                                                 Content="IntervalAgjust"
                                                 Foreground="{DynamicResource ToggleBtnForeground}"
                                                 GroupName="DragEdit"
                                                 IsChecked="{Binding IntervalAdjustEnable, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}, UpdateSourceTrigger=PropertyChanged}" />
                                    <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                                        <TextBlock Margin="5,0" VerticalAlignment="Center"
                                                   Foreground="{DynamicResource ToggleBtnForeground}"
                                                   Text="X:" />
                                        <TextBox x:Name="Part_DragX" MinWidth="40" Padding="0,2"
                                                 VerticalAlignment="Center"
                                                 Background="{DynamicResource ToolBar_Background}"
                                                 Foreground="{DynamicResource ToggleBtnForeground}"
                                                 Text="{Binding DragX, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}, UpdateSourceTrigger=PropertyChanged}">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="IsReadOnly" Value="True" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding DragType, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}}" Value="Speed">
                                                            <Setter Property="IsReadOnly" Value="False" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding DragType, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}}" Value="Gradient">
                                                            <Setter Property="IsReadOnly" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                                        <TextBlock Margin="5,0" VerticalAlignment="Center"
                                                   Foreground="{DynamicResource ToggleBtnForeground}"
                                                   Text="Y:" />
                                        <TextBox x:Name="Part_DragY" MinWidth="40" Padding="0,2"
                                                 VerticalAlignment="Center"
                                                 Background="{DynamicResource ToolBar_Background}"
                                                 Foreground="{DynamicResource ToggleBtnForeground}"
                                                 Text="{Binding DragY, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}, UpdateSourceTrigger=PropertyChanged}">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="IsReadOnly" Value="True" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding DragType, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}}" Value="Speed">
                                                            <Setter Property="IsReadOnly" Value="False" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding DragType, RelativeSource={RelativeSource AncestorType=local:OscillogramCharting}}" Value="Gradient">
                                                            <Setter Property="IsReadOnly" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <!--#region ColorShowSource-->
                            <ItemsControl ItemsSource="{TemplateBinding ColorShowSource}" Visibility="Collapsed">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Rectangle Width="10" Height="10" Margin="5,0"
                                                   Fill="{Binding}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <!--#endregion-->
                            <StackPanel Grid.Column="1" Orientation="Horizontal">

                                <ToggleButton Name="Part_Gradient" Margin="5,0,0,0" HorizontalContentAlignment="Center"
                                              ets:ToggleButtonHelper.DefaultForeGround="{DynamicResource ToggleBtnForeground}"
                                              ets:ToggleButtonHelper.TextForeGround="#206864" ets:ToggleButtonHelper.ToggleBtnBorderBrush="#206864" ets:ToggleButtonHelper.ToggleBtnTxtForeground="#206864"
                                              Content="Gra"
                                              IsChecked="{TemplateBinding GradientShow}" />
                                <ToggleButton Name="Part_RealGradient" Margin="5,0,0,0"
                                              ets:ToggleButtonHelper.DefaultForeGround="{DynamicResource ToggleBtnForeground}"
                                              ets:ToggleButtonHelper.TextForeGround="#AF231C" ets:ToggleButtonHelper.ToggleBtnBorderBrush="#AF231C" ets:ToggleButtonHelper.ToggleBtnTxtForeground="#AF231C"
                                              Content="RealGra"
                                              IsChecked="{TemplateBinding RealGradientShow}" />
                                <Border Margin="4,8" HorizontalAlignment="Center" BorderBrush="Gray"
                                        BorderThickness="1" />
                                <ToggleButton Name="Part_Speed" Margin="5,0,0,0"
                                              ets:ToggleButtonHelper.DefaultForeGround="{DynamicResource ToggleBtnForeground}"
                                              ets:ToggleButtonHelper.TextForeGround="#FF7F50" ets:ToggleButtonHelper.ToggleBtnBorderBrush="#FF7F50" ets:ToggleButtonHelper.ToggleBtnTxtForeground="#FF7F50"
                                              Content="Speed"
                                              IsChecked="{TemplateBinding SpeedShow}" />
                                <ToggleButton Name="Part_RealSpeed" Margin="5,0,0,0"
                                              ets:ToggleButtonHelper.DefaultForeGround="{DynamicResource ToggleBtnForeground}"
                                              ets:ToggleButtonHelper.TextForeGround="#2F4F4F" ets:ToggleButtonHelper.ToggleBtnBorderBrush="#2F4F4F" ets:ToggleButtonHelper.ToggleBtnTxtForeground="#2F4F4F"
                                              Content="RealSpeed"
                                              IsChecked="{TemplateBinding RealSpeedShow}" />
                                <Border Margin="4,8" HorizontalAlignment="Center" BorderBrush="Gray"
                                        BorderThickness="1" />
                                <ToggleButton Name="Part_Pressure" Margin="5,0,0,0"
                                              ets:ToggleButtonHelper.DefaultForeGround="{DynamicResource ToggleBtnForeground}"
                                              ets:ToggleButtonHelper.TextForeGround="#0076F6" ets:ToggleButtonHelper.ToggleBtnBorderBrush="#0076F6" ets:ToggleButtonHelper.ToggleBtnTxtForeground="#0076F6"
                                              Content="Pressure"
                                              IsChecked="{TemplateBinding PressureShow}" />
                                <Border Margin="4,8" HorizontalAlignment="Center" BorderBrush="Gray"
                                        BorderThickness="1" />
                                <ListView Name="Part_Graph" Grid.Column="7" MaxWidth="150"
                                          Margin="0,0,40,0" Background="Transparent" BorderThickness="0"
                                          ItemsSource="{TemplateBinding Waves}"
                                          ScrollViewer.HorizontalScrollBarVisibility="Auto" SelectedItem="" SelectionMode="Multiple"
                                          Visibility="Visible">
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Padding" Value="2,0" />
                                            <Setter Property="Margin" Value="2,0" />
                                            <Setter Property="TextElement.Foreground" Value="{Binding Color}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListViewItem">
                                                        <Border x:Name="Bd"
                                                                Padding="{TemplateBinding Padding}"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="5" SnapsToDevicePixels="true">
                                                            <ContentPresenter x:Name="ContentPresenter"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                                                <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding Color}" />
                                                                <Setter Property="Cursor" Value="Hand" />
                                                            </Trigger>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding Color}" />
                                                                <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding Color}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding Color}" />
                                                                <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                                                                <Setter Property="Cursor" Value="Hand" />
                                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="#FF000000" />
                                                            </MultiTrigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter TargetName="Bd" Property="Opacity" Value="0.55" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Background="Transparent" Text="{Binding Decription}" />
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>
                            <Border Grid.Row="1" Grid.ColumnSpan="2">
                                <local:OscillogramChartingCore x:Name="Part_OscillogramChartingCore" />
                            </Border>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>